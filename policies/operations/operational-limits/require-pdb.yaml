##
# Provided by Sagar on 2023-05-19
##
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-pdb
  annotations:
    policies.kyverno.io/title: Require PodDisruptionBudget
    policies.kyverno.io/category: operational-limits
    policies.kyverno.io/scored: "false"
    policies.kyverno.io/severity: LOW
    policies.kyverno.io/minversion: 1.3.6
    policies.kyverno.io/subject: Deployment, PodDisruptionBudget
    policies.kyverno.io/description: >-
      PodDisruptionBudget resources are useful to ensuring minimum availability
      is maintained at all times. This policy checks all incoming Deployments
      to ensure they have a matching, preexisting PodDisruptionBudget.      
spec:
  validationFailureAction: Audit
  background: false
  rules:
  - name: require-pdb
    match:
      any:
      - resources:
          kinds:
          - Deployment
    exclude:
      any:
      - resources:
          namespaces:
          - argocd
          - calico-system
          - cattle-fleet-system
          - cattle-impersonation-system
          - cattle-logging-system
          - cattle-monitoring-system
          - cattle-neuvector-system
          - cattle-system
          - datadog
          - harbor
          - kube-system
          - linkerd
          - linkerd-cni
          - longhorn-system
          - tigera-operator
    preconditions:
      any:
      - key: "{{request.operation}}"
        operator: Equals
        value: CREATE
    context:
    - name: pdb_count
      apiCall:
        method: GET
        urlPath: "/apis/policy/v1beta1/namespaces/{{request.namespace}}/poddisruptionbudgets"
        jmesPath: "items[?label_match(spec.selector.matchLabels, `{{request.object.spec.template.metadata.labels}}`)] | length(@)"
    validate:
      message: "There is no corresponding PodDisruptionBudget found for this Deployment."
      deny:
        conditions:
          any:
          - key: "{{pdb_count}}"
            operator: LessThan
            value: 1

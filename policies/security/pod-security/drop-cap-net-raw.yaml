##
# Provided by Sagar on 2023-05-16
##
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: drop-cap-net-raw
  annotations:
    policies.kyverno.io/title: Drop CAP_NET_RAW
    policies.kyverno.io/category: pod-security
    policies.kyverno.io/minversion: 1.5.0
    policies.kyverno.io/scored: "true"
    policies.kyverno.io/severity: HIGH
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Capabilities permit privileged actions without giving full root access. The
      CAP_NET_RAW capability, enabled by default, allows processes in a container to
      forge packets and bind to any interface potentially leading to MitM attacks.
      This policy ensures that all containers explicitly drop the CAP_NET_RAW
      ability.            
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  # Checks initContainers and containers to ensure they all specify a securityContext.capabilities.drop section
  - name: check-for-drop-initcontainers
    match:
      any:
      - resources:
          kinds:
          - Pod
    exclude:
      any:
      - resources:
          namespaces:
          - argocd
          - buoyant-cloud
          - calico-system
          - cattle-fleet-system
          - cattle-impersonation-system
          - cattle-logging-system
          - cattle-monitoring-system
          - cattle-neuvector-system
          - cattle-resources-system
          - cattle-system
          - chaos-mesh
          - cert-manager
          - datadog
          - elastic-agent
          - fleet-default
          - goldilocks
          - harbor
          - litmus
          - kubeview
          - linkerd
          - linkerd-buoyant
          - linkerd-cni
          - linkerd-viz
          - linkerd-smi
          - linkerd-buoyant
          - longhorn-system
          - metallb-system
          - nirmata
          - rabbitmq-system
          - awx
          - tql-platform-awx
          - sysdig-agent
          - tigera-operator
          - cattle-provisioning-capi-system # SUSE SR 01415244
          - kube-system # SUSE SR 01415244
    preconditions:
      all:
      - key: "{{request.operation}}"
        operator: AnyIn
        value:
        - CREATE
        - UPDATE
      - key: "{{ request.object.spec.initContainers[] || `[]`| length(@) }}"
        operator: GreaterThanOrEquals
        value: 1
    validate:
      message: All initContainers must specify the securityContext.capabilities.drop section.
      deny:
        conditions:
          any:
          # Deny if every initContainer in the Pod doesn't specify the `drop[]` array (doesn't exist)
          - key: "{{request.object.spec.initContainers[].securityContext.capabilities.drop | length(@) }}"
            operator: NotEquals
            value: "{{request.object.spec.initContainers[] | length(@) }}"
  # Checks containers to ensure they all specify a securityContext.capabilities.drop section
  - name: check-for-drop-containers
    match:
      any:
      - resources:
          kinds:
          - Pod
    exclude:
      any:
      - resources:
          namespaces:
          - argocd
          - buoyant-cloud
          - calico-system
          - cattle-fleet-system
          - cattle-impersonation-system
          - cattle-logging-system
          - cattle-monitoring-system
          - cattle-neuvector-system
          - cattle-resources-system
          - cattle-system
          - cert-manager
          - chaos-mesh
          - datadog
          - elastic-agent
          - fleet-default
          - goldilocks
          - harbor
          - litmus
          - kubeview
          - linkerd
          - linkerd-buoyant
          - linkerd-smi
          - linkerd-cni
          - linkerd-viz
          - linkerd-buoyant
          - longhorn-system
          - metallb-system
          - nirmata
          - rabbitmq-system
          - awx
          - tql-platform-awx
          - sysdig-agent
          - tigera-operator
          - cattle-provisioning-capi-system # SUSE SR 01415244
          - kube-system # SUSE SR 01415244
    preconditions:
      all:
      - key: "{{request.operation}}"
        operator: AnyIn
        value:
        - CREATE
        - UPDATE
    validate:
      message: All containers must specify the securityContext.capabilities.drop section.
      deny:
        conditions:
          any:
          # Deny if every container in the Pod doesn't specify the `drop[]` array (doesn't exist)
          - key: "{{request.object.spec.containers[].securityContext.capabilities.drop | length(@) }}"
            operator: NotEquals
            value: "{{request.object.spec.containers[] | length(@) }}"
  # Checks initContainers to ensure they drop CAP_NET_RAW
  - name: drop-cap-net-raw-initcontainers
    match:
      any:
      - resources:
          kinds:
          - Pod
    exclude:
      any:
      - resources:
          namespaces:
          - argocd
          - buoyant-cloud
          - calico-system
          - cattle-fleet-system
          - cattle-impersonation-system
          - cattle-logging-system
          - cattle-monitoring-system
          - cattle-neuvector-system
          - cattle-resources-system
          - cattle-system
          - cert-manager
          - chaos-mesh
          - datadog
          - elastic-agent
          - fleet-default
          - litmus
          - goldilocks
          - harbor
          - kubeview
          - kube-system
          - linkerd
          - linkerd-buoyant
          - linkerd-smi
          - linkerd-cni
          - linkerd-viz
          - linkerd-buoyant
          - longhorn-system
          - metallb-system
          - nirmata
          - rabbitmq-system
          - awx
          - tql-platform-awx
          - sysdig-agent
          - tigera-operator
          - cattle-provisioning-capi-system # SUSE SR 01415244
          - kube-system # SUSE SR 01415244
    preconditions:
      all:
      - key: "{{request.operation}}"
        operator: AnyIn
        value:
        - CREATE
        - UPDATE
      # Check if initContainers even exist in the Pod
      - key: "{{ request.object.spec.initContainers[] || `[]` | length(@) }}"
        operator: GreaterThanOrEquals
        value: 1
    validate:
      message: The capability CAP_NET_RAW must be explicitly dropped.
      foreach:
      - list: "request.object.spec.initContainers"
        deny:
          conditions:
            any:
            # Loop over the `drop[]` array in each container looking for `CAP_NET_RAW` or `NET_RAW` and deny if not found
            - key: "{{ element.securityContext.capabilities.drop  | contains(@, 'CAP_NET_RAW') || contains(@, 'NET_RAW') }}"
              operator: Equals
              value: false
        preconditions:
          all:
          # Exclude linkerd containers from this check
          - key: "{{ element.name }}"
            operator: NotIn
            value: ["linkerd-network-validator"]
  # Checks containers to ensure they drop CAP_NET_RAW
  - name: drop-cap-net-raw-containers
    match:
      any:
      - resources:
          kinds:
          - Pod
    exclude:
      any:
      - resources:
          namespaces:
          - argocd
          - buoyant-cloud
          - calico-system
          - cattle-fleet-system
          - cattle-impersonation-system
          - cattle-logging-system
          - cattle-monitoring-system
          - cattle-neuvector-system
          - cattle-resources-system
          - cattle-system
          - cert-manager
          - chaos-mesh
          - datadog
          - elastic-agent
          - fleet-default
          - goldilocks
          - harbor
          - kubeview
          - kube-system
          - linkerd
          - linkerd-buoyant
          - linkerd-smi
          - litmus
          - linkerd-cni
          - linkerd-viz
          - linkerd-buoyant
          - longhorn-system
          - metallb-system
          - nirmata
          - rabbitmq-system
          - awx
          - tql-platform-awx
          - sysdig-agent
          - tigera-operator
          - cattle-provisioning-capi-system # SUSE SR 01415244
          - kube-system # SUSE SR 01415244
    preconditions:
      all:
      - key: "{{request.operation}}"
        operator: AnyIn
        value:
        - CREATE
        - UPDATE
    validate:
      message: The capability CAP_NET_RAW must be explicitly dropped.
      foreach:
      - list: "request.object.spec.containers"
        deny:
          conditions:
            any:
            # Loop over the `drop[]` array in each container looking for `CAP_NET_RAW` or `NET_RAW` and deny if not found
            - key: "{{ element.securityContext.capabilities.drop  | contains(@, 'CAP_NET_RAW') || contains(@, 'NET_RAW') }}"
              operator: Equals
              value: false

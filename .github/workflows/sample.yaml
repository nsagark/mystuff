name: Deploy Kyverno

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "tnt2"

jobs:
  test-and-deploy-policies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Software - Docker, kind, kubectl, helm, Chainsaw
        run: |
          # Add Docker's official GPG key:
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

          # Install kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind    

          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/     

          # Install helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash     

          # Install Kyverno Chainsaw 
          curl -LO https://github.com/kyverno/chainsaw/releases/download/v0.2.4/chainsaw_linux_amd64.tar.gz
          tar xvf chainsaw_linux_amd64.tar.gz
          chmod +x chainsaw
          sudo mv chainsaw /usr/local/bin/
          chainsaw          

      - name: Create kind cluster
        run: |
          kind create cluster --image kindest/node:v1.27.0
          pods=$(kubectl get pods -n kube-system -o jsonpath='{.items[*].metadata.name}')

          # Wait for each pod to be ready
          for pod in $pods; do
            kubectl wait --for=condition=ready pod/$pod -n kube-system --timeout=300s
          done
          kubectl get pods -A

      - name: Add Nirmata Helm repo
        run: helm repo add nirmata https://nirmata.github.io/kyverno-charts/

      - name: Install Kyverno
        run: |
          helm install kyverno nirmata/kyverno \
            --version=v3.0.29 \
            --namespace kyverno \
            --create-namespace \
            --set admissionController.replicas=1 \
            --set cleanupController.enabled=false \
            --set reportsController.enabled=false \
            --set backgroundController.enabled=false \
            --set crds.backgroundscanreports=false \
            --set crds.clusterbackgroundscanreports=false \
            --set crds.clusterpolicyreports=false \
            --set crds.policyreports=false \
            --set crds.cleanuppolicies=false
          kypods=$(kubectl get pods -n kyverno -o jsonpath='{.items[*].metadata.name}')
          for kypod in $kypods; do
            kubectl wait --for=condition=ready pod/$kypod -n kyverno --timeout=300s
          done
          kubectl get pods -A
          


